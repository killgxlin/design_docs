app.get('/', function(req, res){
  var res = 
  '<form>
    online_num:<input type="text" name="onlinenum" /><br/>
    target_num:<input type="text" name="targetnum" /><br/>
    <input type="submit" value="Submit" />
  </form>';
});
app.post('/', function(req, res){
  var targetNum = req.body.targetnum;
  var diff = targetNum - manager.onlineRobots.length
  if(diff > 0){
    manager.turnon(diff);
  } else if (diff < 0) {
    manager.turnoff(-diff);
  }
  res.redirect('/');
});

Manager
  offlineRobots
  logingRobots
  onlineRobots
  function init(num) {
    for(var i=0; i<num; ++i) {
      var robot = new Robot();
      onlineRobots.add(robot);
    }
  }
  function turnon(num) {
    for(var i=0; i<num && offlineRobots.length>0; ++i) {
      var robot = offlineRobots.pop();
      (function loging(robot_){
        robot_.logon(function(){
          logingRobots.remove(robot_);
          onlineRobots.add(robot_);
        });
      })(robot);
      logingRobots.add(robot);
    }
  }
  function turnoff(num) {
    for(var i=0; i<num && onlineRobots.length>0; ++i) {
      var robot = onlineRobots.front();
      robot.logoff();
      onlineRobots.remove(robot);
      offlineRobots.add(robot);
    }
  }

Robot
  netlayer
  function Robot(){
    netlayer = new Netlayer;
  }
  function nextAction(callback){
    switch(random(0,6)){
      case 1:
        changeScene();
        break;
      case 2:
        move();
        break;
      case 3: 
        chat();
        break;
    }
    callback();
  }
  function handleNotify(notify_){
    switch(notify_.id){
      case sccreaterole:
        createRole();
        break;
      default:
        nextAction(function(){
          timer.delay(1000, function(){
            nextAction();
          });
        });
        break;
    }
  }
  function logon(){
    netlayer.connect('9876', 'localhost', function(){
      CSMsg cslogon;
      netlayer.sendMsg(cslogon);
    });
  }
  function logoff(){
    netlayer.disconnect();
  }
  function createRole(){
    CSMsg cscreaterole;
    netlayer.sendMsg(cscreaterole);
  }
  function changeScene(){
    CSMsg cschangescene;
    netlayer.sendMsg(cschangescene);
  }
  function chat(){
    CSMsg cschat;
    netlayer.sendMsg(cschat);
  }
  function move(){
    CSMsg csmove;
    netlayer.sendMsg(csmove);
  }
  
Netlayer
  socket
  function Netlayer(){
    socket = new Socket();
  }
  function connect(port, host, callback){
    socket.connect(port, host, callback);
  }
  function disconnect(){
    socket.end();
  }
  function sendMsg(msg){
    socket.write(msg);
  }

